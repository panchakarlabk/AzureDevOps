parameters:
  - name: targetEnvironment
    default: "dev"
    type: string
  - name: azureAgentPool
    type: string #"Azure Cloud Test Agent Pool"
  - name: application_pool
    default: ""
  - name: application_name
    default: ""
  - name: website_name
    default: ""
  - name: server_group
    default: ""
  - name: target_path
    default: ""
  - name: binarys_Path
    default: ""
  - name: artifact_name
    default: 'web' 
  - name: config_path
    default: 'ConfigEnvironments' 
  - name: environment
    default: DES
    values:
      - DES
      - TST
      - PRE
      - AproveProd
      - PRO
  - name: build_type
    default: MsBuild
    values:
      - Core5
      - MsBuild
  - name: deploy_type
    default: Web
    values:
      - Web
      - Sql
      - Console

jobs:
  - deployment: deployment
    displayName: "Approval for deploy to environment ${{ parameters.targetEnvironment }}"
    environment: "${{ parameters.targetEnvironment }}"
    pool:
      name: ${{ parameters.azureAgentPool }}
    strategy:
      runOnce:
        deploy:
          steps:
           # Only when deploy on WEB:
           - ${{ if eq(parameters.deploy_type, 'Web') }}:
               - ${{ if eq(parameters.build_type, 'MsBuild') }}:
                   - checkout: git://es.deploy.Examples/azure-common -templates
                   - script: echo "The Approvers accepted the deploy web msBuild.  $(Build.DefinitionVersion)"
                  
                   - task: DownloadPipelineArtifact@2
                     condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRE'))
                     displayName: 'Download Pipeline Artifact web msBuild PRE'
                     inputs:
                       source: 'specific'
                       project: '$(System.TeamProject)'
                       pipeline: '$(system.definitionId)'
                       runVersion: 'latest'  
                    
                   - task: DownloadPipelineArtifact@2
                     condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRO'))
                     displayName: 'Download Pipeline Artifact web msBuild PRO'
                     inputs:
                       source: 'specific'
                       project: '$(System.TeamProject)'
                       pipeline: '$(system.definitionId)'
                       runVersion: 'latest'
                  
                   - powershell: |
                      $source_path = "$env:Build_Artifactstagingdirectory\${{ parameters.artifact_name }}\"
                      $source_path = $source_path.replace('\a\', '\') 
                      $source_path = "$source_path\${{ parameters.config_path }}"
                      $Config = Test-Path -Path "$source_path"
                      echo "##vso[task.setvariable variable=source_path]$source_path"
                      echo "##vso[task.setvariable variable=Config]$Config"
                      $source_path
                     displayName: 'ConfigEnvironments Path '
                   
                   - task: CopyFiles@2
                     condition: and(succeeded(), eq(variables['Config'], 'True'))
                     displayName: 'Copy Files to: drop/config'
                     inputs:
                        SourceFolder: '$(source_path)\${{ parameters.environment }}\'
                        TargetFolder: '$(source_path)\Config\'
                        overWrite: true
           
                   - task: DeleteFiles@1
                     condition: and(succeeded(), eq(variables['Config'], 'True'))
                     displayName: 'Delete files from drop in ConfigEnvironments'
                     inputs:
                       SourceFolder: '$(source_path)'
                       Contents: '*' 
                       RemoveSourceFolder: true

                   - task: PowerShell@2
                     displayName: "Deploy in ${{ parameters.targetEnvironment }} web msBuild."
                     inputs:
                       targetType: filePath
                       filePath: "Windows/scripts/ansible_script.ps1"
                       arguments:
                         > # Use this to avoid newline characters in multiline string
                         -application_pool ${{ parameters.application_pool }}
                         -application_name ${{ parameters.application_name }}
                         -website_name ${{ parameters.website_name }}
                         -environment ${{ parameters.environment }}
                         -server_group ${{ parameters.server_group }}
                         -target_path ${{ parameters.target_path }}
                         -artifact_name ${{ parameters.artifact_name }}

               - ${{ if eq(parameters.build_type, 'Core5') }}:
                   - checkout: git://es.deploy.Examples/azure-common -templates
                   - script: echo "The Approvers accepted the deploy web core5"

                   - task: DownloadPipelineArtifact@2
                     condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRE'))
                     displayName: 'Download Pipeline Artifact web core5 PRE'
                     inputs:
                       source: 'specific'
                       project: '$(System.TeamProject)'
                       pipeline: '$(system.definitionId)'
                       runVersion: 'latest'

                   - task: DownloadPipelineArtifact@2
                     condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRO'))
                     displayName: 'Download Pipeline Artifact web core5 PRO '
                     inputs:
                       source: 'specific'
                       project: '$(System.TeamProject)'
                       pipeline: '$(system.definitionId)'
                       runVersion: 'latest' 

                   - task: PowerShell@2
                     displayName: "Deploy in ${{ parameters.targetEnvironment }} web core5"
                     inputs:
                       targetType: filePath
                       filePath: "Windows/scripts/ansible_script.ps1"
                       arguments:
                         > # Use this to avoid newline characters in multiline string
                         -application_pool ${{ parameters.application_pool }}
                         -application_name ${{ parameters.application_name }}
                         -website_name ${{ parameters.website_name }}
                         -environment ${{ parameters.environment }}
                         -server_group ${{ parameters.server_group }}
                         -target_path ${{ parameters.target_path }}
                         -artifact_name ${{ parameters.artifact_name }}
                   
           # Only when build and publish on CONSOLE:
           - ${{ if eq(parameters.deploy_type, 'Console') }}:
               - ${{ if or(eq(parameters.build_type, 'CORE5'), eq(parameters.build_type, 'MSBUILD')) }}:
                   - checkout: git://es.deploy.Examples/azure-common -templates
                   - script: echo "The Approvers accepted the deploy console core5 & msBuild."
                   
                   - task: DownloadPipelineArtifact@2
                     condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRE'))
                     displayName: 'Download Pipeline Artifact console core5&MsBuild PRE'
                     inputs:
                       source: 'specific'
                       project: '$(System.TeamProject)'
                       pipeline: '$(system.definitionId)'
                       runVersion: 'latest' 

                   - task: DownloadPipelineArtifact@2
                     condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRO'))
                     displayName: 'Download Pipeline Artifact console core5&MsBuild PRO '
                     inputs:
                       source: 'specific'
                       project: '$(System.TeamProject)'
                       pipeline: '$(system.definitionId)'
                       runVersion: 'latest' 

                   - task: PowerShell@2
                     displayName: "Deploy in ${{ parameters.targetEnvironment }} console core5 & MsBuild"
                     inputs:
                       targetType: filePath
                       filePath: "Windows/scripts/console_ansible_script.ps1"
                       arguments:
                         > # Use this to avoid newline characters in multiline string
                         -application_name ${{ parameters.application_name }}
                         -environment ${{ parameters.environment }}
                         -server_group ${{ parameters.server_group }}
                         -target_path ${{ parameters.target_path }}
                         -artifact_name ${{ parameters.artifact_name }}
                  

           # Only when deploy on SQL:
           - ${{ if eq(parameters.deploy_type, 'Sql') }}:
               - checkout: git://es.deploy.Examples/azure-common -templates
               - script: echo "The Approvers accepted the deploy SQL."

               - task: DownloadPipelineArtifact@2
                 condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRE'))
                 displayName: 'Download Pipeline Artifact SQL PRE'
                 inputs:
                    source: 'specific'
                    project: '$(System.TeamProject)'
                    pipeline: '$(system.definitionId)'
                    runVersion: 'latest'  

               - task: DownloadPipelineArtifact@2
                 condition: and(succeeded(), eq('${{ parameters.environment }}', 'PRO'))
                 displayName: 'Download Pipeline Artifact SQL PRO '
                 inputs:
                   source: 'specific'
                   project: '$(System.TeamProject)'
                   pipeline: '$(system.definitionId)'
                   runVersion: 'latest' 

               - task: PowerShell@2
                 displayName: 'Deploy in ${{ parameters.targetEnvironment }} SQL'
                 inputs:
                   targetType: filePath
                   filePath: 'Windows/scripts/sql_ansible_script.ps1'
                   arguments: > # Use this to avoid newline characters in multiline string
                     -environment ${{ parameters.environment }}
                     -artifact_name ${{ parameters.artifact_name }}


                